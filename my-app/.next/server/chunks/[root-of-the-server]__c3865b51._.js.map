{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jaydo/practiceRun/my-app/server/trpc/trpc.ts"],"sourcesContent":["// initTRPC & base procedures\n//Bootstraps tRPC:\n// Initializes the base router and procedure factory.\n// Sets up publicProcedure, router, etc.\n\nimport { initTRPC } from '@trpc/server';\nimport type { Context } from './context';\n\nconst t = initTRPC.context<Context>().create();\n\nexport const router = t.router;\nexport const publicProcedure = t.procedure;\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,kBAAkB;AAClB,qDAAqD;AACrD,wCAAwC;;;;;AAExC;AAAA;;AAGA,MAAM,IAAI,0RAAA,CAAA,WAAQ,CAAC,OAAO,GAAY,MAAM;AAErC,MAAM,SAAS,EAAE,MAAM;AACvB,MAAM,kBAAkB,EAAE,SAAS","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jaydo/practiceRun/my-app/server/trpc/router/hello.ts"],"sourcesContent":["// Actual tRPC procedure (backedn logic)\nimport { z } from 'zod';\nimport { publicProcedure, router } from '../trpc';\n\nexport const helloRouter = router({\n  greeting: publicProcedure\n    .input(z.object({ name: z.string() }))\n    .query(({ input }) => {\n      return { text: `Hello, ${input.name}` };\n    }),\n});\n"],"names":[],"mappings":"AAAA,wCAAwC;;;;AACxC;AAAA;AACA;;;AAEO,MAAM,cAAc,CAAA,GAAA,wHAAA,CAAA,SAAM,AAAD,EAAE;IAChC,UAAU,wHAAA,CAAA,kBAAe,CACtB,KAAK,CAAC,qOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,MAAM,qOAAA,CAAA,IAAC,CAAC,MAAM;IAAG,IAClC,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;QACf,OAAO;YAAE,MAAM,CAAC,OAAO,EAAE,MAAM,IAAI,EAAE;QAAC;IACxC;AACJ","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jaydo/practiceRun/my-app/server/trpc/index.ts"],"sourcesContent":["// Exports all routers and types for the tRPC server\n// so if you have anoher router add under helloRouter\n// Your main appRouter:\n\n// Combines all subrouters (helloRouter, userRouter, etc).\n// The type AppRouter is imported into lib/trpc.ts to share with client.\n\nimport { router } from './trpc';\nimport { helloRouter } from './router/hello';\n\nexport const appRouter = router({\n  hello: helloRouter,\n});\n\nexport type AppRouter = typeof appRouter;\n"],"names":[],"mappings":"AAAA,oDAAoD;AACpD,qDAAqD;AACrD,uBAAuB;AAEvB,0DAA0D;AAC1D,wEAAwE;;;;AAExE;AACA;;;AAEO,MAAM,YAAY,CAAA,GAAA,wHAAA,CAAA,SAAM,AAAD,EAAE;IAC9B,OAAO,mIAAA,CAAA,cAAW;AACpB","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jaydo/practiceRun/my-app/server/trpc/context.ts"],"sourcesContent":["//tRPC context (auth, ...)\nexport async function createContext() {\n    return {};\n  }\n  \n  export type Context = Awaited<ReturnType<typeof createContext>>;\n  \n// Defines your tRPC Context â€” shared data across every procedure.\n// Common for adding auth, DB client, user session, etc.\n// Currently just empty {}, but you can expand it."],"names":[],"mappings":"AAAA,0BAA0B;;;;AACnB,eAAe;IAClB,OAAO,CAAC;AACV;CAIF,kEAAkE;CAClE,wDAAwD;CACxD,kDAAkD","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jaydo/practiceRun/my-app/app/api/trpc/%5Btrpc%5D/route.ts"],"sourcesContent":["// trpc route handler for Next.js API routes\n// traditional look: pages/api/trpc/[trpc].ts\n// When you call trpc.hello.greet.useQuery(...) on the client, this endpoint gets hit.\n// Handles requests like: /api/trpc/hello.greet\n\n\nimport { fetchRequestHandler } from '@trpc/server/adapters/fetch';\nimport { appRouter } from '@/server/trpc';\nimport { createContext } from '@/server/trpc/context';\n\nconst handler = (req: Request) => {\n  return fetchRequestHandler({\n    endpoint: '/api/trpc',\n    req,\n    router: appRouter,\n    createContext,\n  });\n};\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,6CAA6C;AAC7C,sFAAsF;AACtF,+CAA+C;;;;;AAG/C;AAAA;AACA;AACA;;;;AAEA,MAAM,UAAU,CAAC;IACf,OAAO,CAAA,GAAA,+QAAA,CAAA,sBAAmB,AAAD,EAAE;QACzB,UAAU;QACV;QACA,QAAQ,yHAAA,CAAA,YAAS;QACjB,eAAA,2HAAA,CAAA,gBAAa;IACf;AACF","debugId":null}}]
}