{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jaydo/practiceRun/my-app/app/HelloComponent.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from \"react\";\nimport { trpc } from \"../lib/trpc\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nfunction HelloComponent(){\n    const [name, setName] = useState(\"\");\n    const [field, setField] = useState(\"\");\n    const [response, setResponse] = useState(\"\");\n    const router = useRouter();\n    //const helloQuery = trpc.hello.greeting.useQuery({ name: \"World\" });\n\n    //if (helloQuery.isLoading) return <p>Loading...</p>;\n    //if (helloQuery.isError) return <p>Error: {helloQuery.error.message}</p>;\n\n    const handleClick = async () => {\n        try {\n            const response = await fetch(\"/api/gptNotes\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    messages: [\n                        {\n                            role: \"user\",\n                            content: field\n                        }\n                    ]\n                })\n            });\n\n            const data = await response.json();\n            console.log(\"API Response:\", data);\n\n            const content = data.choices[0].message.content;\n            setResponse(content);\n            router.push(`/response?field=${encodeURIComponent(content)}`);\n        //setResponse(() => data.choices[0].message.content);\n        //console.log(\"in hello component, response is\", response);\n        //router.push(`/response?field=${data.choices[0].message.content}`);\n        // const reader = response.body?.getReader();\n        // const decoder = new TextDecoder();\n\n        // if (!reader) return;\n        // while (true) {\n        //     const {done, value} = await reader.read();\n        //     if (done) break;\n        //     const chunk = decoder.decode(value || new Uint8Array(), {stream: true});\n        //     setResponse((prev) => prev + chunk);\n        //}\n    } catch (error) {\n        console.error(\"Error calling API:\", error);\n    }\n    }\n    // Uncomment if you want to use the name state\n    useEffect(() => {\n        const name = 'jaydon';\n        setName(name);\n    }, []);\n\n    return(\n        <div className=\"border-2 bg-gray-300 p-4 m-4 text-shadow-lg  mx-auto\">\n            {/* header */}\n            <div className=\"relative flex flex-row items-center justify-between px-8 py-4 bg-white shadow-md rounded-md w-full\">\n                {/* Left-aligned title */}\n                <h1 className=\"text-2sm font-serif font-semibold text-gray-800 \">Note Application {name}</h1>\n\n                {/* Centered nav */}\n                <div className=\"absolute left-1/2 transform -translate-x-1/2 flex space-x-5\">\n                    <button className=\"text-lg font-medium text-gray-700 hover:text-blue-600 transition\">Report</button>\n                    <button className=\"text-lg font-medium text-gray-700 hover:text-blue-600 transition\">Dashboard</button>\n                </div>\n            </div>\n            \n            <div className=\"mt-5\">\n                Enter field here: <input type=\"text\" className=\"border-2 border-black-500 rounded-md font-semibold\" value={field} onChange={(e) => setField(e.target.value)} />\n            </div>\n            <h1>Our field is {field}</h1>\n            \n            <button \n                className=\"border-3 mt-10 ml-3 p-1 rounded-md hover:bg-amber-200 bg-amber-50\"\n                onClick={handleClick}\n            > Click here </button>\n            <Link href=\"/playground\">\n                <button className=\"border-3 mt-10 ml-3 p-1 rounded-md hover:bg-amber-200 bg-amber-50\">Playground</button>\n            </Link>\n            \n            \n        </div>\n    )\n}\nexport default HelloComponent;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AALA;;;;;AAMA,SAAS;IACL,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,SAAS,CAAA,GAAA,iQAAA,CAAA,YAAS,AAAD;IACvB,qEAAqE;IAErE,qDAAqD;IACrD,0EAA0E;IAE1E,MAAM,cAAc;QAChB,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC1C,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACjB,UAAU;wBACN;4BACI,MAAM;4BACN,SAAS;wBACb;qBACH;gBACL;YACJ;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,iBAAiB;YAE7B,MAAM,UAAU,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;YAC/C,YAAY;YACZ,OAAO,IAAI,CAAC,CAAC,gBAAgB,EAAE,mBAAmB,UAAU;QAChE,qDAAqD;QACrD,2DAA2D;QAC3D,oEAAoE;QACpE,6CAA6C;QAC7C,qCAAqC;QAErC,uBAAuB;QACvB,iBAAiB;QACjB,iDAAiD;QACjD,uBAAuB;QACvB,+EAA+E;QAC/E,2CAA2C;QAC3C,GAAG;QACP,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,sBAAsB;QACxC;IACA;IACA,8CAA8C;IAC9C,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,OAAO;QACb,QAAQ;IACZ,GAAG,EAAE;IAEL,qBACI,6WAAC;QAAI,WAAU;;0BAEX,6WAAC;gBAAI,WAAU;;kCAEX,6WAAC;wBAAG,WAAU;;4BAAmD;4BAAkB;;;;;;;kCAGnF,6WAAC;wBAAI,WAAU;;0CACX,6WAAC;gCAAO,WAAU;0CAAmE;;;;;;0CACrF,6WAAC;gCAAO,WAAU;0CAAmE;;;;;;;;;;;;;;;;;;0BAI7F,6WAAC;gBAAI,WAAU;;oBAAO;kCACA,6WAAC;wBAAM,MAAK;wBAAO,WAAU;wBAAqD,OAAO;wBAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;0BAE9J,6WAAC;;oBAAG;oBAAc;;;;;;;0BAElB,6WAAC;gBACG,WAAU;gBACV,SAAS;0BACZ;;;;;;0BACD,6WAAC,2RAAA,CAAA,UAAI;gBAAC,MAAK;0BACP,cAAA,6WAAC;oBAAO,WAAU;8BAAoE;;;;;;;;;;;;;;;;;AAMtG;uCACe","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jaydo/practiceRun/my-app/components/ui/upload.tsx"],"sourcesContent":["'use client';\r\nimport { useState } from 'react';\r\n\r\ninterface ProgressProps {\r\n  value: number;\r\n  status: string;\r\n  className?: string;\r\n}\r\n\r\nfunction Progress({ value, status, className }: ProgressProps) {\r\n  return (\r\n    <div className={`w-full ${className}`}>\r\n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n        <div\r\n          className=\"bg-blue-600 h-2 rounded-full transition-all duration-500\"\r\n          style={{ width: `${value}%` }}\r\n        />\r\n      </div>\r\n      <div className=\"flex items-center justify-between mt-2\">\r\n        <p className=\"text-sm text-gray-600\">{status}</p>\r\n        <p className=\"text-sm font-medium text-gray-700\">{value}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function UploadContractPage() {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [status, setStatus] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    \r\n    try {\r\n      setError(null);\r\n      setStatus('Preparing upload...');\r\n      setProgress(10);\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      const response = await fetch('/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.error || 'Upload failed');\r\n      }\r\n\r\n      setProgress(100);\r\n      setStatus('Processing complete!');\r\n      \r\n      const result = await response.json();\r\n      console.log('Processing result:', result);\r\n      \r\n    } catch (error) {\r\n      setError(error instanceof Error ? error.message : 'Upload failed');\r\n      setStatus('Error occurred');\r\n      console.error('Upload error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-12 p-8 border rounded-xl shadow-lg bg-white\">\r\n      <h2 className=\"text-2xl font-bold mb-3\">Upload Contract Documents</h2>\r\n      <p className=\"text-gray-600 mb-6\">Upload your contract files. The AI will parse them to extract key information.</p>\r\n      \r\n      <div className=\"border-dashed border-2 border-gray-300 p-8 rounded-lg text-center bg-gray-50 hover:bg-gray-100 transition-colors duration-200\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\".pdf,.docx\"\r\n          className=\"hidden\"\r\n          id=\"upload-input\"\r\n          onChange={(e) => {\r\n            const selectedFile = e.target.files?.[0];\r\n            if (selectedFile) {\r\n              setFile(selectedFile);\r\n              setProgress(0);\r\n              setStatus('');\r\n              setError(null);\r\n            }\r\n          }}\r\n        />\r\n        <label \r\n          htmlFor=\"upload-input\" \r\n          className=\"cursor-pointer text-blue-600 hover:text-blue-700 font-medium\"\r\n        >\r\n          {file ? file.name : 'Drag & drop files or click to browse'}\r\n        </label>\r\n        <p className=\"text-sm text-gray-500 mt-3\">Supported formats: PDF, DOCX. Max file size: 50MB.</p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n          <p className=\"text-sm text-red-600\">{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {file && (\r\n        <button\r\n          onClick={handleUpload}\r\n          disabled={!file || progress > 0}\r\n          className=\"w-full mt-6 px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\"\r\n        >\r\n          {progress > 0 ? 'Processing...' : 'Process Document'}\r\n        </button>\r\n      )}\r\n\r\n      {(status || progress > 0) && (\r\n        <Progress \r\n          value={progress} \r\n          status={status} \r\n          className=\"mt-6\" \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AADA;;;AASA,SAAS,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAiB;IAC3D,qBACE,6WAAC;QAAI,WAAW,CAAC,OAAO,EAAE,WAAW;;0BACnC,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,MAAM,CAAC,CAAC;oBAAC;;;;;;;;;;;0BAGhC,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAE,WAAU;kCAAyB;;;;;;kCACtC,6WAAC;wBAAE,WAAU;;4BAAqC;4BAAM;;;;;;;;;;;;;;;;;;;AAIhE;AAEe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,eAAe;QACnB,IAAI,CAAC,MAAM;QAEX,IAAI;YACF,SAAS;YACT,UAAU;YACV,YAAY;YAEZ,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,QAAQ;YAExB,MAAM,WAAW,MAAM,MAAM,eAAe;gBAC1C,QAAQ;gBACR,MAAM;YACR;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI;YACjC;YAEA,YAAY;YACZ,UAAU;YAEV,MAAM,SAAS,MAAM,SAAS,IAAI;YAClC,QAAQ,GAAG,CAAC,sBAAsB;QAEpC,EAAE,OAAO,OAAO;YACd,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAClD,UAAU;YACV,QAAQ,KAAK,CAAC,iBAAiB;QACjC;IACF;IAEA,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,6WAAC;gBAAE,WAAU;0BAAqB;;;;;;0BAElC,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBACC,MAAK;wBACL,QAAO;wBACP,WAAU;wBACV,IAAG;wBACH,UAAU,CAAC;4BACT,MAAM,eAAe,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;4BACxC,IAAI,cAAc;gCAChB,QAAQ;gCACR,YAAY;gCACZ,UAAU;gCACV,SAAS;4BACX;wBACF;;;;;;kCAEF,6WAAC;wBACC,SAAQ;wBACR,WAAU;kCAET,OAAO,KAAK,IAAI,GAAG;;;;;;kCAEtB,6WAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;YAG3C,uBACC,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAE,WAAU;8BAAwB;;;;;;;;;;;YAIxC,sBACC,6WAAC;gBACC,SAAS;gBACT,UAAU,CAAC,QAAQ,WAAW;gBAC9B,WAAU;0BAET,WAAW,IAAI,kBAAkB;;;;;;YAIrC,CAAC,UAAU,WAAW,CAAC,mBACtB,6WAAC;gBACC,OAAO;gBACP,QAAQ;gBACR,WAAU;;;;;;;;;;;;AAKpB","debugId":null}}]
}