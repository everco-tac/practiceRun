{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jaydo/practiceRun/my-app/app/HelloComponent.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from \"react\";\nimport { trpc } from \"../lib/trpc\";\n\nfunction HelloComponent(){\n    const [name, setName] = useState(\"\");\n    const [field, setField] = useState(\"\");\n    const [response, setResponse] = useState(\"\");\n    //const helloQuery = trpc.hello.greeting.useQuery({ name: \"World\" });\n\n    //if (helloQuery.isLoading) return <p>Loading...</p>;\n    //if (helloQuery.isError) return <p>Error: {helloQuery.error.message}</p>;\n\n    const handleClick = async () => {\n\n        const response = await fetch(\"/api/gptNotes\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                messages: [\n                    {\n                        role: \"user\",\n                        content: field\n                    }\n                ]\n            })\n        })\n\n        const data = await response.json();\n        console.log(data);\n\n        setResponse(data.choices[0].message.content);\n\n        // const reader = response.body?.getReader();\n        // const decoder = new TextDecoder();\n\n        // if (!reader) return;\n        // while (true) {\n        //     const {done, value} = await reader.read();\n        //     if (done) break;\n        //     const chunk = decoder.decode(value || new Uint8Array(), {stream: true});\n        //     setResponse((prev) => prev + chunk);\n        // }\n    }\n\n    // Uncomment if you want to use the name state\n    useEffect(() => {\n        const name = 'jaydon';\n        setName(name);\n    }, []);\n\n    return(\n        <div className=\"border-2 bg-gray-300 p-4 m-4 text-shadow-lg  mx-auto\">\n            {/* header */}\n            <div className=\"relative flex flex-row items-center justify-between px-8 py-4 bg-white shadow-md rounded-md w-full\">\n                {/* Left-aligned title */}\n                <h1 className=\"text-2sm font-serif font-semibold text-gray-800 \">Note Application {name}</h1>\n\n                {/* Centered nav */}\n                <div className=\"absolute left-1/2 transform -translate-x-1/2 flex space-x-5\">\n                    <button className=\"text-lg font-medium text-gray-700 hover:text-blue-600 transition\">Report</button>\n                    <button className=\"text-lg font-medium text-gray-700 hover:text-blue-600 transition\">Dashboard</button>\n                </div>\n            </div>\n            \n            <div className=\"mt-5\">\n                Enter field here: <input type=\"text\" className=\"border-2 border-black-500 rounded-md font-semibold\" value={field} onChange={(e) => setField(e.target.value)} />\n            </div>\n            <h1>Our field is {field}</h1>\n            \n            <button \n                className=\"border-3 mt-10 ml-3 p-1 rounded-md hover:bg-amber-200 bg-amber-50\"\n                onClick={handleClick}\n            > Click here </button>\n            <div id=\"gpt-response\" className=\"mt-10 border-2 border-black-500 rounded-md p-4\">\n                <p>Our Response</p>\n                <p>{response}</p>\n\n\n            </div>\n        </div>\n    );\n} \n\nexport default HelloComponent;"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAKA,SAAS;;IACL,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,qEAAqE;IAErE,qDAAqD;IACrD,0EAA0E;IAE1E,MAAM,cAAc;QAEhB,MAAM,WAAW,MAAM,MAAM,iBAAiB;YAC1C,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;gBACjB,UAAU;oBACN;wBACI,MAAM;wBACN,SAAS;oBACb;iBACH;YACL;QACJ;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC;QAEZ,YAAY,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;IAE3C,6CAA6C;IAC7C,qCAAqC;IAErC,uBAAuB;IACvB,iBAAiB;IACjB,iDAAiD;IACjD,uBAAuB;IACvB,+EAA+E;IAC/E,2CAA2C;IAC3C,IAAI;IACR;IAEA,8CAA8C;IAC9C,CAAA,GAAA,4RAAA,CAAA,YAAS,AAAD;oCAAE;YACN,MAAM,OAAO;YACb,QAAQ;QACZ;mCAAG,EAAE;IAEL,qBACI,4TAAC;QAAI,WAAU;;0BAEX,4TAAC;gBAAI,WAAU;;kCAEX,4TAAC;wBAAG,WAAU;;4BAAmD;4BAAkB;;;;;;;kCAGnF,4TAAC;wBAAI,WAAU;;0CACX,4TAAC;gCAAO,WAAU;0CAAmE;;;;;;0CACrF,4TAAC;gCAAO,WAAU;0CAAmE;;;;;;;;;;;;;;;;;;0BAI7F,4TAAC;gBAAI,WAAU;;oBAAO;kCACA,4TAAC;wBAAM,MAAK;wBAAO,WAAU;wBAAqD,OAAO;wBAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;0BAE9J,4TAAC;;oBAAG;oBAAc;;;;;;;0BAElB,4TAAC;gBACG,WAAU;gBACV,SAAS;0BACZ;;;;;;0BACD,4TAAC;gBAAI,IAAG;gBAAe,WAAU;;kCAC7B,4TAAC;kCAAE;;;;;;kCACH,4TAAC;kCAAG;;;;;;;;;;;;;;;;;;AAMpB;GAhFS;KAAA;uCAkFM","debugId":null}}]
}